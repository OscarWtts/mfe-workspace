name: Health Check and Monitoring

# DESACTIVADO: Para evitar costos y notificaciones excesivas
# Para ejecutar manualmente: usa manual-health-check.yml
on:
  # schedule:
  #   # Run every 6 hours (4 times per day) - DESACTIVADO
  #   - cron: '0 */6 * * *'
  workflow_dispatch:  # Solo manual

env:
  PROJECT_ID: mfe-project-464600
  REGION: us-central1
  CLUSTER_NAME: mfe-cluster
  CLUSTER_ZONE: us-central1

jobs:
  health-check:
    runs-on: ubuntu-latest
    # Only run if the repository is not a fork and on main branch
    if: github.repository_owner == 'OscarWitts' && github.ref == 'refs/heads/main'
    steps:
      - name: Set up Google Cloud authentication
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} \
            --zone ${{ env.CLUSTER_ZONE }} \
            --project ${{ env.PROJECT_ID }}

      - name: Check cluster health
        continue-on-error: true  # Don't fail the entire workflow if health check fails
        run: |
          echo "=== Cluster Health Check - $(date) ==="
          
          # Simple health check that won't spam logs
          if kubectl cluster-info > /dev/null 2>&1; then
            echo "✅ Cluster is accessible"
          else
            echo "❌ Cluster is not accessible"
            exit 1
          fi
          
          # Check critical deployments only
          DEPLOYMENTS=$(kubectl get deployments -o name 2>/dev/null || echo "")
          if [ -n "$DEPLOYMENTS" ]; then
            echo "✅ Deployments found: $(echo $DEPLOYMENTS | wc -w)"
            kubectl get deployments -o custom-columns="NAME:.metadata.name,READY:.status.readyReplicas,AVAILABLE:.status.availableReplicas" --no-headers
          else
            echo "❌ No deployments found"
          fi

      - name: Quick endpoint test
        continue-on-error: true  # Don't fail if endpoints are temporarily down
        run: |
          # Get external IP
          EXTERNAL_IP=$(kubectl get ingress mfe-ingress -o jsonpath='{.status.loadBalancer.ingress[0].ip}' 2>/dev/null || echo "")
          
          if [ -n "$EXTERNAL_IP" ]; then
            echo "✅ External IP: $EXTERNAL_IP"
            
            # Quick test with timeout
            if curl -f -s -m 10 "http://$EXTERNAL_IP/" > /dev/null; then
              echo "✅ Host endpoint is responding"
            else
              echo "⚠️  Host endpoint is not responding"
            fi
          else
            echo "⚠️  No external IP found"
          fi

      - name: Summary
        run: |
          echo "=== Health Check Summary ==="
          echo "Timestamp: $(date)"
          echo "Next check in 6 hours"
          echo "Manual check: Use 'workflow_dispatch' to run immediately"
