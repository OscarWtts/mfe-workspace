name: Manual Health Check

# Este workflow SOLO se ejecuta manualmente
# No hay schedule autom√°tico para evitar costos y notificaciones
on:
  workflow_dispatch:
    inputs:
      check_type:
        description: 'Tipo de check a realizar'
        required: true
        default: 'basic'
        type: choice
        options:
          - basic
          - full
          - endpoints

env:
  PROJECT_ID: mfe-project-464600
  REGION: us-central1
  CLUSTER_NAME: mfe-cluster
  CLUSTER_ZONE: us-central1

jobs:
  manual-health-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Google Cloud authentication
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} \
            --zone ${{ env.CLUSTER_ZONE }} \
            --project ${{ env.PROJECT_ID }}

      - name: Basic Health Check
        if: ${{ inputs.check_type == 'basic' }}
        run: |
          echo "üîç BASIC HEALTH CHECK"
          echo "========================="
          
          # Cluster connectivity
          if kubectl cluster-info > /dev/null 2>&1; then
            echo "‚úÖ Cluster: Connected"
          else
            echo "‚ùå Cluster: Not accessible"
            exit 1
          fi
          
          # Deployments
          DEPLOYMENTS=$(kubectl get deployments --no-headers 2>/dev/null | wc -l)
          echo "üìä Deployments: $DEPLOYMENTS found"
          
          # Pods
          RUNNING_PODS=$(kubectl get pods --field-selector=status.phase=Running --no-headers 2>/dev/null | wc -l)
          echo "üèÉ Running Pods: $RUNNING_PODS"
          
          # Services
          SERVICES=$(kubectl get services --no-headers 2>/dev/null | wc -l)
          echo "üåê Services: $SERVICES found"
          
          echo "‚úÖ Basic health check completed"

      - name: Full Health Check
        if: ${{ inputs.check_type == 'full' }}
        run: |
          echo "üîç FULL HEALTH CHECK"
          echo "========================="
          
          echo "=== Cluster Info ==="
          kubectl cluster-info
          
          echo "=== Deployments ==="
          kubectl get deployments -o wide
          
          echo "=== Pods ==="
          kubectl get pods -o wide
          
          echo "=== Services ==="
          kubectl get services -o wide
          
          echo "=== Ingress ==="
          kubectl get ingress -o wide
          
          echo "=== Recent Events ==="
          kubectl get events --sort-by=.metadata.creationTimestamp

      - name: Endpoints Check
        if: ${{ inputs.check_type == 'endpoints' }}
        run: |
          echo "üîç ENDPOINTS CHECK"
          echo "========================="
          
          # Get external IP
          EXTERNAL_IP=$(kubectl get ingress mfe-ingress -o jsonpath='{.status.loadBalancer.ingress[0].ip}' 2>/dev/null || echo "")
          
          if [ -n "$EXTERNAL_IP" ]; then
            echo "üåê External IP: $EXTERNAL_IP"
            
            # Test host endpoint
            echo "Testing host endpoint..."
            if curl -f -s -m 10 "http://$EXTERNAL_IP/" > /dev/null; then
              echo "‚úÖ Host: http://$EXTERNAL_IP/ - OK"
            else
              echo "‚ùå Host: http://$EXTERNAL_IP/ - FAILED"
            fi
            
            # Test console endpoint
            echo "Testing console endpoint..."
            if curl -f -s -m 10 "http://$EXTERNAL_IP/console/" > /dev/null; then
              echo "‚úÖ Console: http://$EXTERNAL_IP/console/ - OK"
            else
              echo "‚ùå Console: http://$EXTERNAL_IP/console/ - FAILED"
            fi
          else
            echo "‚ùå No external IP found"
          fi

      - name: Health Check Summary
        run: |
          echo "üìã HEALTH CHECK SUMMARY"
          echo "========================="
          echo "‚úÖ Manual health check completed"
          echo "‚è∞ Timestamp: $(date)"
          echo "üîß Check type: ${{ inputs.check_type }}"
          echo ""
          echo "üí° Para m√°s checks:"
          echo "   - Ejecuta este workflow manualmente"
          echo "   - Usa: npm run health-check (localmente)"
          echo "   - Usa: npm run test-endpoints (localmente)"
